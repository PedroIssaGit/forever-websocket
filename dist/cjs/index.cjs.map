{"version":3,"file":"index.cjs","names":["_ws","_interopRequireDefault","require","_eventemitter","obj","__esModule","default","ForeverWebSocket","EventEmitter","ownEventNames","optionsExtendedPropertyNames","address","protocol","optionsExtended","automaticOpen","optionsWebSocket","reconnectManager","timeoutManager","pingManager","listenersWebSocket","constructor","options","isMethod","propertyName","desc","Object","getOwnPropertyDescriptor","value","isObject","Array","isArray","allOptions","keys","forEach","key","includes","reservedPropertyNames","propertyNames","getOwnPropertyNames","ws","prototype","args","defineProperty","get","set","createReconnectFactory","strategy","initialDelay","maxDelay","randomizeDelay","factor","callbackStartConnect","callbackStartDelay","lastConnectedMts","isStopped","retryNumber","previousDelay","delay","nextDelay","timeoutId","scheduleNextConnect","getNextDelay","fibonacci","exponential","Date","now","randomizedDelay","Math","min","round","random","setTimeout","unref","reset","clearTimeout","undefined","stop","getlastConnectedMts","getIsStopped","getRetryNumber","freeze","reconnect","lastConnectionTimestamp","emit","connect","createPingFactory","interval","callbackPing","intervalId","start","setInterval","clearInterval","ping","readyState","frame","data","mask","send","createTimeoutFactory","timeout","callbackTimeout","lastActiveMts","refresh","hasOwnProperty","once","eventName","listener","on","unshift","method","addEventListener","index","findIndex","elem","splice","addListener","off","removeListener","removeEventListener","OPEN","terminate","newWebSocket","listeners","entries","eventHandlerName","JSON","stringify","code","reason","close","exports"],"sources":["../../src/index.mjs"],"sourcesContent":["import ws from 'ws'\nimport EventEmitter from 'eventemitter3'\n\n/**\n * This class represents a reconnecting WebSocket client. It extends the EventEmitter.\n *\n * The class exposes all WebSocket properties and methods\n * WebSocket client https://github.com/websockets/ws\n */\nexport class ForeverWebSocket extends EventEmitter {\n  // Names of properties which are not cloned from underlying WebSocket\n  #ownEventNames = ['connecting', 'delay', 'timeout', 'newListener', 'removeListener', 'reconnected']\n// Property names for `options`\n  #optionsExtendedPropertyNames = ['automaticOpen', 'reconnect', 'timeout', 'ping', 'newWebSocket']\n  // stores constructor parameter - the URL to which to connect\n  #address\n  // stores constructor parameter - the URL to which to connect#address\n  #protocol\n  #optionsExtended = {\n    automaticOpen: true,\n  }\n  #optionsWebSocket\n  #reconnectManager\n  #timeoutManager\n  #pingManager\n  // stores WebSocket registered listeners, which will be re-registered when a new WebSocket connection is established at reconnect\n  #listenersWebSocket\n  \n  /**\n   *\n   * @param {string} address - The URL to which to connect\n   * @param {string|string[]} [protocol] - The list of subprotocols\n   * @param {object} [options] - Options as described below, plus options as specified on https://github.com/websockets/ws/blob/master/doc/ws.md#class-websocket\n   * @param {boolean} [options.automaticOpen=true] - Controls if WebSocket should be created and connected automatically to the server\n   * @param {object} [options.reconnect={}] - Optional parameter for reconnecting. If parameter property is missing or `null`, no reconnection will reoccur\n   * @param {'fibonacci'|'exponential'} [options.reconnect.strategy='fibonacci'] - Backoff strategy\n   * @param {number} [options.reconnect.initialDelay=50] - Defaults to 50 ms\n   * @param {number} [options.reconnect.maxDelay=10000] - Defaults to 10000 ms\n   * @param {number} [options.reconnect.factor=1.5] - Multiplicative factor for 'exponential' backoff strategy\n   * @param {boolean} [options.reconnect.randomizeDelay=false] - Range of randomness and must be between 0 and 1. By default, no randomisation is applied\n   * @param {number} [options.timeout] - timeout in milliseconds after which the websockets reconnects when no messages are received. Defaults to no timeout\n   * @param {object} [options.ping] - Controls how ping are sent to websocket server. By default, no ping is sent\n   * @param {number} [options.ping.interval] - Ping interval value in milliseconds\n   * @param {array|number|object|string|ArrayBuffer|buffer} [options.ping.data] - The data to send in the ping message\n   * @param {boolean} [options.ping.pingFrame=false] - Specifies whether ping should be sent as a ping frame\n   * @param {boolean} [options.ping.mask] - Specifies whether `data` should be masked or not\n   * @param {function} [options.newWebSocket] - Functions which returns a WebSocket instance. If present it will be called when a new WebSocket is needed when reconnecting. The function could be useful in situations when the new WebSocket connection needs to be created with different parameters when reconnecting (e.g. a timestamp in the headers, or different URL)\n   */\n  constructor(address, protocol, options) {\n    super()\n\n    // Helper function - Checks if `propertyName` is a method of `obj`\n    const isMethod = (obj, propertyName) => {\n      const desc = Object.getOwnPropertyDescriptor (obj, propertyName)\n      return !!desc && typeof desc.value === 'function'\n    }\n\n    // Helper function - Checks if `obj` is an object\n    const isObject = (obj) => {\n      return typeof obj === 'object' && obj !== null && !Array.isArray(obj)\n    }\n\n    // Store address parameter\n    this.#address = address\n\n    // Store protocol parameter\n    let allOptions\n    if (Array.isArray(protocol) || typeof protocol === 'string') {\n      this.#protocol = protocol\n    }\n\n    // Store options parameters, separating the keys to `#optionsWebSocket` (WebSocket native options) and `#optionsExtended` (ForeverWebSocket options)\n    if (isObject(options)) {\n      allOptions = options\n    } else if (isObject(protocol)){\n      allOptions = protocol\n    } else {\n      allOptions = {}\n    }\n\n    Object.keys(allOptions).forEach((key) => {\n      if (this.#optionsExtendedPropertyNames.includes(key)) {\n        if (isObject(allOptions[key]) && isObject(this.#optionsExtended[key])) {\n          // if key value is an object, keep default values if not specified in parameter `options` \n          this.#optionsExtended[key] = { ...this.#optionsExtended[key], ...allOptions[key] }\n        } else {\n          // else store the specified value\n          this.#optionsExtended[key] = allOptions[key] \n        }\n      } else {\n        this.#optionsWebSocket ??= {}\n        this.#optionsWebSocket[key] = allOptions[key]\n      }\n    })\n\n    this.#listenersWebSocket = {}\n\n    // Add methods and properties of underlying WebSocket class, except `reservedPropertyNames` which are defined explicitly\n    const reservedPropertyNames = ['close', 'send', 'constructor', 'readyState', 'onopen', 'onmessage', 'onerror', 'onclose', 'addEventListener', 'removeEventListener']\n    let propertyNames = Object.getOwnPropertyNames(ws.prototype)\n    for (const propertyName of propertyNames) {\n      if (reservedPropertyNames.includes(propertyName)) continue\n      if (isMethod(ws.prototype, propertyName)) {\n        this[propertyName] = (...args) => this.ws[propertyName](...args)\n      } else {\n        Object.defineProperty(this, propertyName, {\n          get: () => this.ws[propertyName],\n          set: (value) => this.ws[propertyName] = value\n        })\n      }\n    }\n\n    // Defines factory function to handle reconnect\n    function createReconnectFactory({ strategy = 'fibonacci', initialDelay = 50, maxDelay = 10000, randomizeDelay = true, factor = 1.5 } = {}, callbackStartConnect, callbackStartDelay) {\n      let lastConnectedMts\n      let isStopped = false\n      let retryNumber = 0\n      let previousDelay = 0\n      let delay = 0\n      let nextDelay = initialDelay\n      let timeoutId = null\n\n      function scheduleNextConnect() {\n        const getNextDelay = {\n          fibonacci: () => delay + previousDelay,\n          exponential: () => delay * factor,\n        }\n\n        lastConnectedMts = Date.now()\n        isStopped = false\n        previousDelay = delay\n        delay = nextDelay\n        let randomizedDelay = Math.min(delay, maxDelay)\n        randomizedDelay = randomizeDelay ? Math.round(randomizedDelay * (1 + Math.random() * 0.2)) : randomizedDelay\n\n\n        callbackStartDelay(retryNumber + 1, randomizedDelay)\n        timeoutId = setTimeout(() => {\n          retryNumber += 1\n          callbackStartConnect(retryNumber, lastConnectedMts)\n        }, randomizedDelay)\n        timeoutId.unref?.()\n\n        // calculate the delay for the next reconnect\n        nextDelay =  getNextDelay[strategy]()\n      }\n\n      function reset() {\n        isStopped = false\n        clearTimeout(timeoutId)\n        timeoutId = null\n        retryNumber = 0\n        previousDelay = 0\n        delay = 0\n        nextDelay = initialDelay\n        lastConnectedMts = undefined\n      }\n\n      function stop() {\n        isStopped = true\n        clearTimeout(timeoutId)\n      }\n\n      function getlastConnectedMts() {\n        return lastConnectedMts\n      }\n\n      function getIsStopped() {\n        return isStopped\n      }\n\n      function getRetryNumber() {\n        return retryNumber\n      }\n\n      return Object.freeze({\n        scheduleNextConnect,\n        reset,\n        stop,\n        lastConnectedMts: getlastConnectedMts,\n        isStopped: getIsStopped,\n        retryNumber: getRetryNumber,\n      })\n    }\n\n    // Create reconnect manager if needed\n    if (this.#optionsExtended?.reconnect !== null) {\n      this.#reconnectManager = createReconnectFactory(\n        this.#optionsExtended.reconnect,\n        (retryNumber, lastConnectionTimestamp) => {\n          this.emit('connecting', retryNumber, lastConnectionTimestamp)\n          this.connect()\n        },\n        (retryNumber, delay) => {\n          this.emit('delay', retryNumber, delay)\n        }\n      )\n    }\n\n    function createPingFactory({ interval }, callbackPing) {\n      let intervalId\n      function start() {\n        intervalId = setInterval(() => {\n          callbackPing()\n        }, interval)\n        \n        intervalId.unref?.()\n      }\n\n      function stop() {\n        clearInterval(intervalId)\n      }\n\n      return Object.freeze({\n        start,\n        stop,\n      })\n    }\n\n    // Create ping manager if needed\n    if (this.#optionsExtended.ping) {\n      this.#pingManager = createPingFactory(\n        {\n          interval: this.#optionsExtended.ping.interval,\n        },\n        () => {\n          if (this.readyState === 1) {\n            if (typeof this.ping === 'function' && this.#optionsExtended.ping.frame) {\n              this.ping(this.#optionsExtended.ping.data, this.#optionsExtended.ping.mask)\n            } else {\n              this.send(this.#optionsExtended.ping.data)\n            }\n          }\n        }\n      )\n    }\n\n    function createTimeoutFactory({ timeout }, callbackTimeout) {\n      let timeoutId\n      let lastActiveMts\n      function reset() {\n        lastActiveMts = Date.now()\n        if (typeof timeoutId?.refresh === 'function') {\n          timeoutId.refresh()\n        } else {\n          clearTimeout(timeoutId)\n          timeoutId = setTimeout(() => {\n            callbackTimeout(lastActiveMts)\n          }, timeout)\n        }\n\n        timeoutId.unref?.()\n      }\n\n      function start() {\n        reset()\n      }\n\n      function stop() {\n        clearTimeout(timeoutId)\n        timeoutId = null\n      }\n\n      return Object.freeze({\n        start,\n        reset,\n        stop,\n      })\n    }\n\n    // Create timeout manager if needed\n    if (this.#optionsExtended.hasOwnProperty('timeout') && this.#optionsExtended.timeout > 0) {\n      this.#timeoutManager = createTimeoutFactory(\n        {\n          timeout: this.#optionsExtended.timeout\n        },\n        (lastActiveMts) => {\n          this.emit('timeout', lastActiveMts)\n          this.refresh()\n        }\n      )\n    }\n\n    if (this.#optionsExtended.automaticOpen) {\n      this.connect()\n    }\n  }\n\n  once(eventName, listener, options) {\n    this.on(eventName, listener, { ...(options || {}), once: true })\n  }\n\n  /**\n   * Catches registration of event listeners, to add these to WebSocket object\n   *\n   * All events are added to the websocket object\n   * @param eventName\n   * @param listener\n   * @param options\n   */\n  on(eventName, listener, options) {\n    if (this.#ownEventNames.includes(eventName)) {\n      return super.on(eventName, listener)\n    }\n\n    // Add listener to listeners array, so that it can be added later when a new WebSocket object is created at reconnect\n    if(Array.isArray(this.#listenersWebSocket[eventName])) {\n      this.#listenersWebSocket[eventName].unshift({ listener, options, method: 'on' })\n    } else {\n      this.#listenersWebSocket[eventName] = [{ listener, options, method: 'on' }]\n    }\n\n    if (this.ws) {\n      if (options?.once) {\n        this.ws.addEventListener(eventName, () => {\n          let index = this.#listenersWebSocket[eventName].findIndex((elem) => elem.listener === listener && elem.options?.once)\n          if (index > -1) this.#listenersWebSocket[eventName].splice(index, 1)\n        }, { once: true })\n      }\n\n      if (typeof this.ws.on === 'function') {\n        this.ws.on(eventName, listener, options)\n      } else {\n        this.ws.addEventListener(eventName, listener, options)\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Alias for `on`\n   */\n  addListener(...args) {\n    return this.on(...args)\n  }\n\n  /**\n   * Alias for `on`\n   */\n  addEventListener(eventName, listener, options) {\n    if (this.#ownEventNames.includes(eventName)) {\n      return super.on(eventName, listener)\n    }\n\n    // Add listener to listeners array, so that it can be added later when a new WebSocket object is created at reconnect\n    if(Array.isArray(this.#listenersWebSocket[eventName])) {\n      this.#listenersWebSocket[eventName].unshift({ listener, options, method: 'addEventListener' })\n    } else {\n      this.#listenersWebSocket[eventName] = [[listener, options]]\n    }\n\n    if (this.ws) {\n      if (options?.once) {\n        this.ws.addEventListener(eventName, () => {\n          let index = this.#listenersWebSocket[eventName].findIndex((elem) => elem.listener === listener && elem.options?.once)\n          if (index > -1) this.#listenersWebSocket[eventName].splice(index, 1)\n        }, { once: true })\n      }\n\n      this.ws.addEventListener(eventName, listener, options)\n    }\n\n    return this\n  }\n\n  off(eventName, listener) {\n    if (this.#ownEventNames.includes(eventName)) {\n      return super.removeListener(eventName, listener)\n    }\n\n    this.ws.removeEventListener(eventName, listener)\n\n    // Remove listener from listeners array\n    let index = this.#listenersWebSocket[eventName].findIndex((elem) => elem[0] === listener)\n    if (index > -1) this.#listenersWebSocket[eventName].splice(index, 1)\n\n    return this\n  }\n\n  removeListener(...args) {\n    this.addListener(...args)\n  }\n\n  removeEventListener(...args) {\n    this.addListener(...args)\n  }\n\n  /**\n   * Returns the readyState of the underlying WebSocket or `undefined` if it does not exist.\n   * When the underlying WebSocket object does not exist it returns `undefined`\n   *\n   * @returns {number|null}\n   */\n  get readyState() {\n    return this.ws?.readyState\n  }\n\n  connect() {\n    // If a WebSocket is already defined do nothing\n    if (this.ws && this.ws.readyState === ws.OPEN) {\n      return\n    }\n\n    if (this.ws && this.ws.terminate) {\n      this.ws.terminate()\n    }\n\n    // Stop ping and timout managers, will activate them again when WebSocket connection is open\n    this.#pingManager?.stop()\n    this.#timeoutManager?.stop()\n\n    // Create a new WebSocket, either by calling `options.newWebSocket` or using the WebSocket class\n    if (this.#optionsExtended.newWebSocket) {\n      this.ws = this.#optionsExtended.newWebSocket()\n    } else {\n      this.ws = new ws(this.#address, this.#protocol, this.#optionsWebSocket)\n    }\n\n    // When WebSocket connection is open, restart ping and timeout managers, and reset the reconnect manager\n    this.ws.addEventListener('open', () => {\n      this.#pingManager?.start()\n      this.#timeoutManager?.start()\n      if (this.#reconnectManager) {\n        const retryNumber = this.#reconnectManager.retryNumber()\n        const lastConnectedMts = this.#reconnectManager.lastConnectedMts()\n        this.#reconnectManager.reset()\n        if (lastConnectedMts) {\n          this.emit('reconnected', retryNumber, lastConnectedMts)\n        }\n      }\n    })\n\n    // When a message is received, reset timeout manager\n    this.ws.addEventListener('message', () => {\n      this.#timeoutManager?.reset()\n    })\n\n    // When pong is received, refresh timeout manager\n    // Note: Not all WebSocket implementations support `on()` method and `pong` event\n    if (typeof this.ws.on === 'function') {\n      this.ws.on('pong',  (data) => {\n        this.#timeoutManager?.reset()\n      })\n    }\n\n    // When WebSocket closes, stop ping and timeout managers and schedule next reconnect if reconnect manager is defined and not stopped manually.\n    this.ws.addEventListener('close', () => {\n      this.#pingManager?.stop()\n      this.#timeoutManager?.stop()\n      if (this.#reconnectManager && !this.#reconnectManager.isStopped()) {\n        this.#reconnectManager.scheduleNextConnect()\n      }\n    })\n\n    // Add registered event listeners to the new underlying WebSocket object\n    for (const [eventName, listeners] of Object.entries(this.#listenersWebSocket)) {\n      for (const { listener, options, method } of listeners) {\n        // If once = true, then remove listeners from listeners array when the event has occurred once\n        if(options?.once) {\n          this.ws.addEventListener(eventName, () => {\n            let index = this.#listenersWebSocket[eventName].findIndex((elem) => elem.listener === listener && elem.options?.once)\n            if (index > -1) this.#listenersWebSocket[eventName].splice(index, 1)\n          }, { once: true })\n        }\n\n        // Add listener to the WebSocket object using the same method as initially added\n        if (method === 'on' && typeof this.ws.on === 'function') {\n          this.ws.on(eventName, listener, options)\n        } else {\n          this.ws.addEventListener(eventName, listener, options)\n        }\n      }\n    }\n\n    // Set event handler properties for the new underlying WebSocket object\n    for (const eventHandlerName of ['onopen', 'onmessage', 'onerror', 'onclose']) {\n      if (this[eventHandlerName]) {\n        this.ws[eventHandlerName] = this[eventHandlerName]\n      }\n    }\n  }\n\n  /**\n   *\n   * Sends data to the WebsocketServer.\n   *\n   * The method extends `WebSocket.send()` method, so that and `Object` can be passed. In this case the object is stringfied before sending.\n   *\n   * It will throw an exception if you call send() when the connection is in the CONNECTING state or when underlying WebSocket object does not exist.\n   *\n   * @param data\n   */\n  send(data) {\n    if (typeof data === 'object') {\n      this.ws.send(JSON.stringify(data))\n    } else {\n      this.ws.send(data)\n    }\n  }\n\n  /**\n   * Refreshes the connection (close, re-open).\n   */\n  refresh(code, reason) {\n    this.ws.close(code, reason)\n  }\n\n  /**\n   * Closes the Websocket and stops reconnecting.\n   *\n   * @param code\n   * @param reason\n   */\n  close(code, reason) {\n    this.#pingManager?.stop()\n    this.#timeoutManager?.stop()\n    this.#reconnectManager?.stop()\n    this.ws.close(code, reason)\n  }\n\n  /**\n   * Terminates the WebSocket (forcibly closes the connection) and stops reconnecting.\n   *\n   * For some browser WebSocket implementation this method is not available, in which case internally this calls `WebSocket.close()`.\n   */\n  terminate() {\n    this.#pingManager?.stop()\n    this.#timeoutManager?.stop()\n    this.#reconnectManager?.stop()\n    if (typeof this.ws?.terminate === 'function') {\n      this.ws.terminate()\n    } else {\n      this.ws.close()\n    }\n  }\n}\n"],"mappings":"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"}